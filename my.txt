1. 运行模式
    BEAN模式：任务以JobHandler方式维护在执行器端；需要结合 "JobHandler" 属性匹配执行器中任务；
    GLUE模式(Java)：任务以源码方式维护在调度中心；该模式的任务实际上是一段继承自IJobHandler的Java类代码并 "groovy" 源码方式维护，它在执行器项目中运行，可使用@Resource/@Autowire注入执行器里中的其他服务；
    GLUE模式(Shell)：任务以源码方式维护在调度中心；该模式的任务实际上是一段 "shell" 脚本；
    GLUE模式(Python)：任务以源码方式维护在调度中心；该模式的任务实际上是一段 "python" 脚本；
    GLUE模式(PHP)：任务以源码方式维护在调度中心；该模式的任务实际上是一段 "php" 脚本；
    GLUE模式(NodeJS)：任务以源码方式维护在调度中心；该模式的任务实际上是一段 "nodejs" 脚本；
    GLUE模式(PowerShell)：任务以源码方式维护在调度中心；该模式的任务实际上是一段 "PowerShell" 脚本；


2. xxl-job配额和jarslink模块开发。任务调度抽象出来。可以给每个任务设置调度时间，一个执行器。就行

3. jarslink对加载的jar，里面用到的spring 注入对象，用jar自己的，如果没有
就用jarslink所在的主加载方的。不同的jar用不同的类加载器加载。即使同一个字节码，也是不同字节码对象

4. admin根据注册的执行器ip列表，根据路由策略选择调用。执行器也会注册admin的地址tcp等返回调用结果。这种结果返回是执行器回调admin，所以即使时间再长都可以，如果一直在等待，可能是执行器注册的admin地址有问题

5. xxl-job是集中式架构，抽象出的执行器被admin调度